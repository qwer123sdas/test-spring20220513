<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.choong.spr.mapper.MemberMapper">
	<!-- 로그인 하기 -->
	<select id="userLogin" resultType="String">
		SELECT Member_Name memberName
		FROM Member
		WHERE Member_ID=#{memberID} AND Member_PW=#{memberPW}
	</select>

	<!-- 회원 정보 페이지 -->
	<select id="userDetail"
		resultType="com.choong.spr.domain.MemberDto">
		SELECT Member_NO memberNo, 
				Member_ID memberID, 
				Member_PW memberPW, 
				Member_Name memberName,
				Member_NickName memberNickName,
				Member_Email memberEmail, 
				Member_Phone memberPhone, 
				ZoneCode zoneCode, 
				MainAddress mainAddress, 
				DetailAddress detailAddress
		FROM Member
		WHERE
		Member_ID=#{id}
	</select>

	<!-- 아이디 중복 검사 -->
	<select id="idCheck" resultType="int">
		SELECT count(Member_ID) 
		FROM Member
		WHERE Member_ID=#{id}
	</select>
	<!-- 닉네임 중복 검사 -->
	<select id="nickNameCheck" resultType="int">
		SELECT count(Member_NickName) 
		FROM Member
		WHERE Member_NickName=#{nickName}
	</select>
	<!-- BO 유저이름 가져오기-->
	<select id="getUserByUserName" resultType="com.choong.spr.domain.MemberDto">
		SELECT Member_Name memberName
		FROM Member
		WHERE Member_Name=#{userName}
	</select>
	
	<!-- 스프링 시큐리티, BO 유저이름 가져오기-->
	
	<select id="getUserNameById" resultType="com.choong.spr.domain.MemberDto">
		SELECT Member_Name memberName
		FROM Member
		WHERE Member_ID=#{id}
	</select>
	
	<select id="getUserNumberById" resultType="int">
		SELECT Member_NO memberNO
		FROM Member
		WHERE Member_ID = #{id}
	</select>
	
	<!-- 비밀번호 찾기(이름, 이메일 검사) -->
	<select id="selectMemberByNameAndEmail" resultType="int">
		SELECT Count(Member_ID)
		FROM Member
		WHERE Member_ID = #{id} AND Member_Email = #{email}
	</select>
	
	<!-- 네이버 아이디로 로그인 사용자 유니크 식별자를 통하여 가입정보를 조회 -->
<!-- 	<select id="getUserBySnsId" resultMap="com.choong.spr.domain.NaverDto">
		SELECT a.Member_Name,
				a.Member_PW,
				b.sns_id,
				b.sns_name
		FROM Member a, Naver_INFO b
		WHERE a.Member_No = b.id
	</select> -->
	
	
	
	<!-- 회원가입 -->
	<insert id="singUp" useGeneratedKeys="true" keyColumn="Member_NO" 
			keyProperty="memberNO" parameterType="com.choong.spr.domain.MemberDto">
		INSERT INTO Member(Member_ID, 
							Member_PW, 
							Member_Name, 
							Member_Email,
							Member_Phone,
							Member_NickName, 
							ZoneCode, 
							MainAddress, 
							DetailAddress, 
							enable)
		  VALUES(#{memberID}, 
		  		#{memberPW}, 
		  		#{memberName}, 
		  		#{memberEmail}, 
		  		#{memberPhone}, 
		  		#{memberNickName}, 
		  		#{zoneCode}, 
		  		#{mainAddress}, 
		  		#{detailAddress},
		  		#{enable}
		  		)
	</insert>
	
	<insert id="insertAuth">
		INSERT INTO Auth(Member_NO, role)
		VALUES(#{memberNO}, #{role})
	</insert>
	

	<!-- 회원정보 수정 -->
	<update id="editUserExceptPW">
		UPDATE Member
		SET Member_Name = #{memberName},
			Member_NickName = #{memberNickName},
		    Member_Email = #{memberEmail},
		    Member_Phone = #{memberPhone},
		    ZoneCode = #{zoneCode},
		    MainAddress = #{mainAddress},
		    DetailAddress = #{detailAddress}
		WHERE Member_ID = #{memberID}
	</update>
	
	<update id="editUserALL">
		UPDATE Member
		SET Member_Name = #{dto.memberName},
			Member_PW = #{encodedNewPW},
		    Member_Email = #{dto.memberEmail},
		    Member_Phone = #{dto.memberPhone},
		    ZoneCode = #{dto.zoneCode},
		    MainAddress = #{dto.mainAddress},
		    DetailAddress = #{dto.detailAddress}
		WHERE Member_ID = #{dto.memberID}
	</update>
	
	
	<!-- 비밀번호 잃어버렸을 때 비밀번호 초기화 -->
	<update id="restPW">
		UPDATE Member
		SET Member_PW = #{resetPW}
		WHERE Member_ID = #{memberID}
	</update>
	
	<!-- 회원 탈퇴 -->
	<!-- 프로시저 처리 -->
	<delete id="deletUser" statementType="CALLABLE">
		{call deletUser(#{memberNO})}
	</delete>
</mapper>